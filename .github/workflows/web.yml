name: web
on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: apps/mobile/package-lock.json

      # Use the lockfile when present; otherwise do a normal install.
      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci (lockfile present)"
            npm ci --no-audit --no-fund
          else
            echo "No package-lock.json => npm install"
            npm install --no-audit --no-fund
          fi

      # Ensure runtime web deps (no-op if they're already there)
      - name: Ensure web deps (Expo Web + Router)
        env:
          CI: "true"
        run: npx expo install react-dom react-native-web @expo/metro-runtime expo-router

      # âœ… If pdf-lib isn't installed (or not in package.json), install it on-the-fly
      # so Metro can resolve the dynamic import in exportPdf.web.ts.
      - name: Ensure pdf-lib (install if missing)
        run: |
          node -e "try{require.resolve('pdf-lib');process.exit(0)}catch{process.exit(1)}" \
          || npm install pdf-lib --no-audit --no-fund

      - name: Export static web build
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          EXPO_PUBLIC_DEV_BYPASS_LOGIN: "true"
        run: npx expo export --platform web --output-dir dist

      - name: Patch index.html for GitHub Pages
        working-directory: apps/mobile/dist
        run: |
          node -e "const fs=require('fs');let s=fs.readFileSync('index.html','utf8');s=s.replace(/(src|href)=\"\/_expo/g,'$1=\"./_expo');fs.writeFileSync('index.html',s)"
          cp index.html 404.html
          touch .nojekyll

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: apps/mobile/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
