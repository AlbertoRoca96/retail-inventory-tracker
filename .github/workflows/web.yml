name: web
on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: apps/mobile/package-lock.json

      # Install deps (use npm ci if a lockfile exists, otherwise npm install)
      - name: Install deps
        working-directory: apps/mobile
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci (lockfile present)"
            npm ci --no-audit --no-fund
          else
            echo "No package-lock.json => using npm install"
            npm install --no-audit --no-fund
          fi

      # Ensure runtime web deps (no-op if already present)
      - name: Ensure web deps (Expo Web + Router)
        working-directory: apps/mobile
        env:
          CI: "true"
        run: npx expo install react-dom react-native-web @expo/metro-runtime expo-router

      # Sanity check: pdf-lib must resolve (prevents Metro 'cannot find module pdf-lib')
      - name: Verify pdf-lib is installed
        working-directory: apps/mobile
        run: node -e "console.log('pdf-lib ->', require.resolve('pdf-lib'))"

      - name: Export static web build
        working-directory: apps/mobile
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          EXPO_PUBLIC_DEV_BYPASS_LOGIN: "true"
        run: npx expo export --platform web --output-dir dist

      - name: Patch index.html for GitHub Pages
        working-directory: apps/mobile/dist
        run: |
          node -e "const fs=require('fs');let s=fs.readFileSync('index.html','utf8');s=s.replace(/(src|href)=\"\/_expo/g,'$1=\"./_expo');fs.writeFileSync('index.html',s)"
          cp index.html 404.html
          touch .nojekyll

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: apps/mobile/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
