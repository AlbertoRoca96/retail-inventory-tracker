name: web
on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        working-directory: apps/mobile
        run: npm i --no-audit --no-fund

      - name: Ensure web deps match SDK
        working-directory: apps/mobile
        env:
          CI: "true"
        run: npx expo install react-dom react-native-web @expo/metro-runtime expo-router

      - name: Export static web build
        working-directory: apps/mobile
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          EXPO_PUBLIC_DEV_BYPASS_LOGIN: "true"
        run: npx expo export --platform web --output-dir dist

      # Rewrite index.html so it always loads the hashed entry from _expo/*
      - name: Make robust index.html + 404 and disable Jekyll
        working-directory: apps/mobile/dist
        run: |
          node -e "
            const fs = require('fs');
            let html = fs.readFileSync('index.html','utf8');
            // Grab first script or link that points to the entry in _expo/static/js/web
            const m = html.match(/(?:src|href)=\"(\/?_expo\/static\/js\/web\/[^\"]+\.js)\"/);
            if(!m){ throw new Error('Could not locate entry bundle path in index.html'); }
            let entry = m[1];
            if(!entry.startsWith('.')) entry = entry.replace(/^\//,'./');
            const out = `<!doctype html>
<html lang=\"en\">
<head>
  <meta charset=\"utf-8\"/>
  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"/>
  <title>Retail Inventory Tracker</title>
</head>
<body>
  <div id=\"root\">Loadingâ€¦</div>
  <script type=\"module\" src=\"${entry}\" defer></script>
</body>
</html>`;
            fs.writeFileSync('index.html', out);
            fs.copyFileSync('index.html','404.html');
            fs.writeFileSync('.nojekyll','');
          "

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: apps/mobile/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
